<?php
namespace Phabric;
use Mockery as m;

/**
 * Test class for Factory.
 * Generated by PHPUnit on 2011-07-30 at 10:48:55.
 */
class FactoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Factory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
       
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        Factory::reset();
        \Mockery::close();
    }

    public function testCreatePhabric()
    {
        $db  = m::mock('\Doctrine\DBAL\Connection');
        $bus = m::mock('\Phabric\Bus');

        $bus->shouldReceive('registerEntity')
                ->with('event', 'Phabric\Phabric')
                ->once();

        Factory::setDatabaseConnection($db);
        Factory::setBus($bus);
        $entity = Factory::createPhabric('event');

        $this->assertType('\Phabric\Phabric', $entity);
    }

    /**
     * @expectedException RuntimeException
     */
    public function testCreatePhabricNoDbConnSet()
    {
        $entity = Factory::createPhabric('event');
    }

}

?>
