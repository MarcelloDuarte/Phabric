<?php

namespace Phabric;
use Mockery as m;


/**
 * Test class for Bus.
 * Generated by PHPUnit on 2011-07-31 at 12:12:00.
 */
class BusTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Bus
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Bus;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        \Mockery::close();
    }

    /**
     * @todo Implement testRegisterNamedDataTranslation().
     */
    public function testRegisterNamedDataTranslation()
    {
        $fn = function($a, $b) { $c = $a + $b; return $c; };

        $this->object->registerNamedDataTranslation('test', $fn);

        $this->assertEquals($fn, $this->object->getNamedDataTranslation('test'));
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testRegisterNamedDataTranslationNonCallableArgument()
    {
        $fn = array();

        $this->object->registerNamedDataTranslation('test', $fn);
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testGetNamedDataTranslationNotFound()
    {
        $this->object->getNamedDataTranslation('test');
    }

    public function testRegisterEntity()
    {
        $phab = m::mock('\Phabric\Phabric');
        $this->object->registerEntity('test', $phab);

        $this->assertType('\Phabric\Phabric', $this->object->getEntity('test'));
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testGetEntityNotFound()
    {
        $this->object->getEntity('anything');
    }



}

?>
